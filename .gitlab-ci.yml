default:
  image: mcr.microsoft.com/dotnet/core/sdk:3.1

variables:
  SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar'
  GIT_DEPTH: '0'

stages:
  - build
  - analyze
  - publish

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

build and test:
  stage: build
  services:
    - name: mcr.microsoft.com/azure-storage/azurite:latest
      alias: azurite
      command: ["azurite-blob", "--blobHost", "0.0.0.0", "--blobPort", "10000"]
  artifacts:
    paths:
      - TestResults/
      - Packages/
    reports:
      junit:
        - TestResults/**/*-results.xml
  coverage: '/^\|\s+Total\s+\|\s+\d+\.?\d+%\s+\|\s+(\d+\.?\d+)%\s+\|\s+\d+\.?\d+%\s+\|$/'
  before_script:
    - ". build/prepare.sh"
  script:
    - "dotnet build -c $FLAVOR $BUILD_ARGS"
    - "mkdir TestResults/ || true"
    - "dotnet test  -c $FLAVOR -v=n --test-adapter-path:. --logger:\"junit;LogFilePath=../../TestResults/{assembly}-results.xml;FailureBodyFormat=Verbose\" $TEST_ARGS"
    - "mkdir Packages/ || true"
    - "cp $(find ./ -name *.*nupkg -print) Packages/"

sonarcloud-check:
  stage: analyze
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - 1-beta
    - beta
    - master

publish nuget packages:
  stage: publish
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true" && $CI_PIPELINE_SOURCE != "push"'
      when: on_success
    - when: never
  script:
    - "printenv"
    - "dotnet nuget push **/*.nupkg -s https://api.nuget.org/v3/index.json -k $NUGET_API_KEY"
